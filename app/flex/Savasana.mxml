<?xml version="1.0" encoding="utf-8"?>
<mx:Application creationCompleteEffect="fadeIn" layout="vertical" xmlns:mx="http://www.adobe.com/2006/mxml" backgroundGradientColors="[#ffffff, #000000]" xmlns:control="com.savasana.control.*" width="100%" creationComplete="handleCreationComplete()" xmlns:component="com.savasana.components.*" height="100%">
  <mx:Script>
<![CDATA[
    import com.savasana.components.*;
    import com.savasana.model.SavasanaModelLocator;
    import com.savasana.util.CairngormUtils;
    import com.savasana.control.EventNames;
    import com.savasana.model.Teacher;
    private function handleCreationComplete():void {
        CairngormUtils.dispatchEvent(EventNames.LIST_TEACHERS);
    }
[Bindable]
private var _model:SavasanaModelLocator = SavasanaModelLocator.getInstance();

        public function createTeacher0(values:Object):void {
          var model:Object = new Teacher();
          model.lastName = values.lastName;
          model.firstName = values.firstName;
          CairngormUtils.dispatchEvent(EventNames.CREATE_TEACHER, model);
        }

        public function updateTeacher0(values:Object):void {
          var model:Object = new Teacher(_model.currentTeacher.id);
          model.lastName = values.lastName;
          model.firstName = values.firstName;
          model.id = values.id;
          CairngormUtils.dispatchEvent(EventNames.UPDATE_TEACHER, model);
        }
      import mx.controls.Alert;
      public static function debug(str:String):void {
        /* Alert.show(str); */
      }
      
      public function firstAndLastName(data:Object, column:DataGridColumn):String {
        return data.firstName + ' ' + data.lastName;
      }
      
      import com.savasana.model.Teacher;

]]>
</mx:Script>
  <control:SavasanaController id="controller" />
  <mx:Fade duration="100" id="fadeIn">
  </mx:Fade>
  <mx:Style source="com/savasana/css/savasana.css">
  </mx:Style>
  <mx:HBox>
    <mx:Panel title="Teachers" width="40%" id="teachersPanel" height="40%">
      <mx:HBox>
        <mx:DataGrid dataProvider="{_model.teachers}" id="teachersDG" click="_model.currentTeacher = Teacher(teachersDG.selectedItem)">
          <mx:columns>
            <mx:DataGridColumn headerText="Name" dataField="name" labelFunction="firstAndLastName" width="150">
            </mx:DataGridColumn>
          </mx:columns>
        </mx:DataGrid>
        <mx:Form id="teacherForm" styleName="teacherForm">
          <mx:FormItem label="First Name">
            <mx:TextInput id="firstNameText" text="{_model.currentTeacher.firstName}">
            </mx:TextInput>
          </mx:FormItem>
          <mx:FormItem label="Last Name">
            <mx:TextInput id="lastNameText" text="{_model.currentTeacher.lastName}">
            </mx:TextInput>
          </mx:FormItem>
          <mx:FormItem>
            <mx:ControlBar paddingLeft="0">
              <mx:ViewStack selectedIndex="{_model.currentTeacher.id == 0 ? 0 : 1}" id="teacherVSK">
                <mx:HBox>
                  <mx:Spacer width="10">
                  </mx:Spacer>
                  <mx:Button label="Create" click="createTeacher0({lastName: lastNameText.text,
                          firstName:firstNameText.text})">
                  </mx:Button>
                </mx:HBox>
                <mx:HBox>
                  <mx:Spacer width="100%">
                  </mx:Spacer>
                  <mx:Button label="Update" click="updateTeacher0({lastName: lastNameText.text,
                          firstName:firstNameText.text,
                          id:       _model.currentTeacher.id})">
                  </mx:Button>
                </mx:HBox>
              </mx:ViewStack>
              <mx:Button label="Cancel">
              </mx:Button>
            </mx:ControlBar>
          </mx:FormItem>
        </mx:Form>
      </mx:HBox>
    </mx:Panel>
    <mx:Panel title="Timeslots" width="40%" id="timeslotsPanel" height="40%">
    </mx:Panel>
  </mx:HBox>
</mx:Application>
